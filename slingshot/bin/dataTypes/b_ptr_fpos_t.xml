<?xml version="1.0" encoding="utf-8"?>
<dt>
 <name>
  b_ptr_fpos_t
 </name>
 <parent>
  b_ptr_void
 </parent>
 <dt_type>
  fpos_t*
 </dt_type>
 <dial_groups order="VALUE">
  <group name="VALUE">
   <dial>
    BEGINNING
   </dial>
   <dial>
    MIDDLE
   </dial>
   <dial>
    END
   </dial>
   <dial>
    MAX_STRUCT
   </dial>
   <dial>
    MIN_STRUCT
   </dial>
  </group>
 </dial_groups>
 <include>
  <block>
   <![CDATA[#include <unistd.h>
#include <fcntl.h>
#include "b_ptr_void.h"]]>
  </block>
 </include>
 <defines>
  <block>
   <![CDATA[#define TESTDIR "testdir"
#define TESTFILE        "testdir/testfile_fpos_t"
static FILE* filePtr  = NULL;
static fpos_t temp_fpos_t;]]>
  </block>
 </defines>
 <access>
  <block>
   <![CDATA[int position = 0;]]>
  </block>
  <block dials="BEGINNING">
   <![CDATA[position = 1;]]>
  </block>
  <block dials="MIDDLE">
   <![CDATA[position = 9;]]>
  </block>
  <block dials="END">
   <![CDATA[position = 72;  // should be EOF]]>
  </block>
  <block dials="BEGINNING, MIDDLE, END">
   <![CDATA[int fd;
      char buffer[128];

      // Setup log file for template information
      FILE* logFile = NULL;

      if ((logFile = fopen ("/tmp/templateLog.txt","a+")) == NULL)
      {
	  exit(99);
      }

      if (mkdir(TESTDIR,S_IRWXU|S_IRWXG|S_IRWXO)!=0) /* create test directory, u+rwx */
      {
	  //if the directory already exists ignore the error
	  if (errno != EEXIST)
	  {
		  fprintf(logFile,"b_ptr_fpos_t datatype not setup properly - mkdir failed. Function not tested\n");
		  fclose(logFile);
		  exit(99);
	  }
      }

      //remove the file, ignore error if already removed
      if (unlink (TESTFILE) != 0 )
      {
	  if (errno !=  ENOENT)
	  {
		  fprintf(logFile,"unlink failed. Function not tested\n");
		  fclose(logFile); 
		  exit(99);
	  }
      }

      if((fd = open (TESTFILE, O_WRONLY | O_CREAT | O_TRUNC, 0644))==-1)
      {
	  fprintf(logFile,"b_ptr_fpos_t datatype not setup properly - open failed. Function not tested\n");
	  fclose(logFile);
	  exit(99);
      }

      write (fd, "I am a test file.\n", 18);
      write (fd, "I am a test file.\n", 18);
      write (fd, "I am a test file.\n", 18);
      write (fd, "I am a test file.\n", 18);

      if (close (fd)!=0)  
      {
	  fprintf(logFile,"b_ptr_fpos_t datatype not setup properly - close failed. Function not tested\n");
	  fclose(logFile);
	  exit(99);
      }

      if ((filePtr = fopen (TESTFILE,"r+")) == NULL)
      {
	  fprintf(logFile,"b_ptr_fpos_t datatype not setup properly - fopen failed.  Function not tested\n");
	  fclose(logFile);
	  exit(99);
      }
   
      fread(buffer, sizeof(char), position, filePtr);
   
      if (fgetpos(filePtr, _theVariable) != 0)
      {
	  fclose(filePtr);
	  fprintf(logFile,"b_ptr_fpos_t datatype not setup properly - fgetpos failed.  Function not tested\n");
	  fclose(logFile);
	  exit(99);
      }

      fclose(logFile);]]>
  </block>
  <block dials="MAX_STRUCT">
   <![CDATA[temp_fpos_t.__pos = MAXINT;
      temp_fpos_t.__state.__count = MAXINT;]]>
  </block>
  <block dials="MIN_STRUCT">
   <![CDATA[temp_fpos_t.__pos = -MAXINT;
      temp_fpos_t.__state.__count = -MAXINT;]]>
  </block>
 </access>
 <commit/>
 <cleanup>
  <block dials="BEGINNING, MIDDLE, END">
   <![CDATA[FILE* logFile = NULL;

      if ((logFile = fopen ("/tmp/templateLog.txt","a+")) == NULL)
      {
	  exit(99);
      }

      if (filePtr != NULL)
      {
	  fclose(filePtr);
      }
  
      //remove file
      if (unlink(TESTFILE)!=0)
      {  
	  //ignore error if already removed.
	  if (errno != ENOENT)
	  {
		  fprintf(logFile,"unlink testfile_fpos_t failed\n");
	  }
      }
      fclose(logFile);]]>
  </block>
 </cleanup>
</dt>